const mongoose = require("mongoose");

const RecipeSchema = new mongoose.Schema({
  user: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "user"
  },
  title: {
    type: String,
    required: true
  },
  images: [
    {
      type: String
    }
  ]
});

module.exports = Recipe = mongoose.model("recipe", RecipeSchema);


ObjectId("5dc817fd4b551e416c3a1013"),ObjectId("5dc8184f4b551e416c3a1014"),ObjectId("5dc818584b551e416c3a1015"),ObjectId("5dc818684b551e416c3a1016"),ObjectId("5dc8187e4b551e416c3a1017"),ObjectId("5dc818a74b551e416c3a1018"),ObjectId("5dc818b34b551e416c3a1019"),ObjectId("5dc818be4b551e416c3a101a5dc818be4b551e416c3a101a"),ObjectId("5dc818ca4b551e416c3a101b"),ObjectId("5dc818d74b551e416c3a101c"),ObjectId("5dc818e44b551e416c3a101d"),ObjectId("5dc818f64b551e416c3a101e"),ObjectId("5dc818fe4b551e416c3a101f"),ObjectId("5dc819104b551e416c3a1020"),ObjectId("5dc8191f4b551e416c3a1021")




<Fragment>
                {cart_array.map(recipe => (
                  <div className='bg-light'>
                    {recipe.title && ingred_array[count] && price_array[count] && total_array ?
                    <div>
                        <p>{recipe.title}</p> 
                        <br />
                      Ingredients, price: <br />
                        {ingred_array[count].map(ingred => (
                          <p>
                            {ingred}: {price_array[count][temp_count++]}
                          </p>
                        ))}: ''}
                        Total: {total_array[count]}
                        {(count = count + 1)}
                        {(temp_count = 0)}
                  </div> : ''}
                  </div>
              ))} : ''}
                <br />
                <strong>Net Total: </strong>
                {total_sum}
              </Fragment>